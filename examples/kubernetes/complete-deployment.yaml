# Complete Njalla Webhook + External-DNS Deployment for Kubernetes
# This manifest creates everything needed to use External-DNS with Njalla domains
---
apiVersion: v1
kind: Namespace
metadata:
  name: external-dns
  labels:
    name: external-dns
---
# Store your Njalla API token securely
# Get your token from: https://njal.la/settings/api/
apiVersion: v1
kind: Secret
metadata:
  name: njalla-api-credentials
  namespace: external-dns
type: Opaque
stringData:
  # IMPORTANT: Replace with your actual Njalla API token
  api-token: "your-njalla-api-token-here"
---
# ServiceAccount for External-DNS
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: external-dns
---
# ClusterRole with necessary permissions for External-DNS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
# Bind the ClusterRole to the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns
---
# Deploy the Njalla Webhook server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: njalla-webhook
  namespace: external-dns
  labels:
    app: njalla-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: njalla-webhook
  template:
    metadata:
      labels:
        app: njalla-webhook
    spec:
      containers:
      - name: njalla-webhook
        # Use a specific version tag for production
        image: ghcr.io/douglaz/njalla-webhook:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8888
          protocol: TCP
        env:
        # Required: Njalla API token
        - name: NJALLA_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: njalla-api-credentials
              key: api-token
        # Webhook server configuration
        - name: WEBHOOK_HOST
          value: "0.0.0.0"
        - name: WEBHOOK_PORT
          value: "8888"
        # IMPORTANT: Update with your domains
        # This must match the domain-filter in external-dns
        - name: DOMAIN_FILTER
          value: "example.com,example.org"
        # Logging configuration
        - name: RUST_LOG
          value: "info"
        # Set to true to test without making actual changes
        - name: DRY_RUN
          value: "false"
        # Health checks
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
# Service to expose the webhook within the cluster
apiVersion: v1
kind: Service
metadata:
  name: njalla-webhook
  namespace: external-dns
  labels:
    app: njalla-webhook
spec:
  type: ClusterIP
  selector:
    app: njalla-webhook
  ports:
  - name: http
    port: 8888
    targetPort: 8888
    protocol: TCP
---
# Deploy External-DNS configured to use the webhook
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    app: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.k8s.io/external-dns/external-dns:v0.14.0
        args:
        # Sources to watch for DNS entries
        - --source=ingress
        - --source=service
        # Webhook provider configuration
        - --provider=webhook
        - --webhook-provider-url=http://njalla-webhook:8888
        # IMPORTANT: Update with your domains
        # Must match the DOMAIN_FILTER in njalla-webhook
        - --domain-filter=example.com
        - --domain-filter=example.org
        # TXT registry for ownership records
        - --registry=txt
        - --txt-owner-id=njalla-webhook
        - --txt-prefix=_externaldns.
        # Sync configuration
        - --interval=1m
        - --log-level=info
        - --log-format=text
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
---
# Optional: NetworkPolicy for security
# Uncomment if you use NetworkPolicies in your cluster
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: njalla-webhook-network-policy
#   namespace: external-dns
# spec:
#   podSelector:
#     matchLabels:
#       app: njalla-webhook
#   policyTypes:
#   - Ingress
#   - Egress
#   ingress:
#   # Allow traffic from external-dns
#   - from:
#     - podSelector:
#         matchLabels:
#           app: external-dns
#     ports:
#     - protocol: TCP
#       port: 8888
#   egress:
#   # Allow DNS resolution
#   - to:
#     - namespaceSelector: {}
#       podSelector:
#         matchLabels:
#           k8s-app: kube-dns
#     ports:
#     - protocol: TCP
#       port: 53
#     - protocol: UDP
#       port: 53
#   # Allow HTTPS traffic to Njalla API
#   - ports:
#     - protocol: TCP
#       port: 443
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: external-dns-network-policy
#   namespace: external-dns
# spec:
#   podSelector:
#     matchLabels:
#       app: external-dns
#   policyTypes:
#   - Egress
#   egress:
#   # Allow DNS resolution
#   - to:
#     - namespaceSelector: {}
#       podSelector:
#         matchLabels:
#           k8s-app: kube-dns
#     ports:
#     - protocol: TCP
#       port: 53
#     - protocol: UDP
#       port: 53
#   # Allow connection to webhook
#   - to:
#     - podSelector:
#         matchLabels:
#           app: njalla-webhook
#     ports:
#     - protocol: TCP
#       port: 8888
#   # Allow access to Kubernetes API
#   - ports:
#     - protocol: TCP
#       port: 443
#     - protocol: TCP
#       port: 6443